import PDS from 0xb6f2481eba4df97b
import PackNFT from 0x87ca73a41bb50ad5
import Golazos from 0x87ca73a41bb50ad5
import NonFungibleToken from 0x1d7e57aa55817448

transaction (
    distId: UInt64,
    packId: UInt64,
    nftContractAddrs: [Address],
    nftContractName: [String],
    nftIds: [UInt64],
    salt: String,
    owner: Address,
    openRequest: Bool,
    NFTProviderPath: PrivatePath
) {
    prepare(pds: AuthAccount) {
        let cap = pds.borrow<&PDS.DistributionManager>(from: PDS.DistManagerStoragePath) ?? panic("pds does not have Dist manager")
        let p = PackNFT.borrowPackRepresentation(id: packId) ?? panic ("No such pack")
        if openRequest && p.status == PackNFT.Status.Revealed {
            let recvAcct = getAccount(owner)
            let recv = recvAcct.getCapability(Golazos.CollectionPublicPath).borrow<&{NonFungibleToken.CollectionPublic}>()
                ?? panic("Unable to borrow Collection Public reference for recipient")
            cap.openPackNFT(
                distId: distId,
                packId: packId,
                nftContractAddrs: nftContractAddrs,
                nftContractName: nftContractName,
                nftIds: nftIds,
                recvCap: recv,
                collectionProviderPath: NFTProviderPath
            )
        } else {
            cap.revealPackNFT(
                    distId: distId,
                    packId: packId,
                    nftContractAddrs: nftContractAddrs,
                    nftContractName: nftContractName,
                    nftIds: nftIds,
                    salt: salt)
        }
    }
}