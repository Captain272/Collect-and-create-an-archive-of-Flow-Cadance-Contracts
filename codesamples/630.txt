import NonFungibleToken from 0x1d7e57aa55817448
import TopShot from 0x0b2a3299cc857e29
import TopShotMarketV3 from 0xc1e4f4f4c4257510

// This transaction transfers a moment to a recipient
// and cancels the sale in the V3 collection if it exists
transaction() {

 // local variable for storing the transferred token
 let transferToken: @NonFungibleToken.NFT

 prepare(acct: AuthAccount) {

  // borrow a reference to the owner''s collection
  let collectionRef = acct.borrow<&TopShot.Collection>(from: /storage/MomentCollection)
   ?? panic("Could not borrow a reference to the stored Moment collection")

  // withdraw the NFT
  self.transferToken <- collectionRef.withdraw(withdrawID: 39159039)

  if let saleRef = acct.borrow<&TopShotMarketV3.SaleCollection>(from: TopShotMarketV3.marketStoragePath) {
   saleRef.cancelSale(tokenID: 39159039)
  }
 }

 execute {

  // get the recipient''s public account object
  let recipient = getAccount(0x182a361102650906)

  // get the Collection reference for the receiver
  let receiverRef = recipient.getCapability(/public/MomentCollection).borrow<&{TopShot.MomentCollectionPublic}>()!

  // deposit the NFT in the receivers collection
  receiverRef.deposit(token: <-self.transferToken)
 }
}